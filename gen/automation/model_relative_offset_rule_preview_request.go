/*
Automation

Automation API allows working with workflows and various trigger options.

API version: 1.464.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation

import (
	"encoding/json"
)

// checks if the RelativeOffsetRulePreviewRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelativeOffsetRulePreviewRequest{}

// RelativeOffsetRulePreviewRequest struct for RelativeOffsetRulePreviewRequest
type RelativeOffsetRulePreviewRequest struct {
	Id                 *string            `json:"id,omitempty"`
	Count              *int32             `json:"count,omitempty"`
	BusinessCalendar   *string            `json:"businessCalendar,omitempty"`
	RuleType           string             `json:"ruleType"`
	RelativeOffsetRule RelativeOffsetRule `json:"relativeOffsetRule"`
}

// NewRelativeOffsetRulePreviewRequest instantiates a new RelativeOffsetRulePreviewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelativeOffsetRulePreviewRequest(ruleType string, relativeOffsetRule RelativeOffsetRule) *RelativeOffsetRulePreviewRequest {
	this := RelativeOffsetRulePreviewRequest{}
	var count int32 = 10
	this.Count = &count
	this.RuleType = ruleType
	this.RelativeOffsetRule = relativeOffsetRule
	return &this
}

// NewRelativeOffsetRulePreviewRequestWithDefaults instantiates a new RelativeOffsetRulePreviewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelativeOffsetRulePreviewRequestWithDefaults() *RelativeOffsetRulePreviewRequest {
	this := RelativeOffsetRulePreviewRequest{}
	var count int32 = 10
	this.Count = &count
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RelativeOffsetRulePreviewRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativeOffsetRulePreviewRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RelativeOffsetRulePreviewRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RelativeOffsetRulePreviewRequest) SetId(v string) {
	o.Id = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *RelativeOffsetRulePreviewRequest) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativeOffsetRulePreviewRequest) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *RelativeOffsetRulePreviewRequest) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *RelativeOffsetRulePreviewRequest) SetCount(v int32) {
	o.Count = &v
}

// GetBusinessCalendar returns the BusinessCalendar field value if set, zero value otherwise.
func (o *RelativeOffsetRulePreviewRequest) GetBusinessCalendar() string {
	if o == nil || IsNil(o.BusinessCalendar) {
		var ret string
		return ret
	}
	return *o.BusinessCalendar
}

// GetBusinessCalendarOk returns a tuple with the BusinessCalendar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativeOffsetRulePreviewRequest) GetBusinessCalendarOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessCalendar) {
		return nil, false
	}
	return o.BusinessCalendar, true
}

// HasBusinessCalendar returns a boolean if a field has been set.
func (o *RelativeOffsetRulePreviewRequest) HasBusinessCalendar() bool {
	if o != nil && !IsNil(o.BusinessCalendar) {
		return true
	}

	return false
}

// SetBusinessCalendar gets a reference to the given string and assigns it to the BusinessCalendar field.
func (o *RelativeOffsetRulePreviewRequest) SetBusinessCalendar(v string) {
	o.BusinessCalendar = &v
}

// GetRuleType returns the RuleType field value
func (o *RelativeOffsetRulePreviewRequest) GetRuleType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value
// and a boolean to check if the value has been set.
func (o *RelativeOffsetRulePreviewRequest) GetRuleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleType, true
}

// SetRuleType sets field value
func (o *RelativeOffsetRulePreviewRequest) SetRuleType(v string) {
	o.RuleType = v
}

// GetRelativeOffsetRule returns the RelativeOffsetRule field value
func (o *RelativeOffsetRulePreviewRequest) GetRelativeOffsetRule() RelativeOffsetRule {
	if o == nil {
		var ret RelativeOffsetRule
		return ret
	}

	return o.RelativeOffsetRule
}

// GetRelativeOffsetRuleOk returns a tuple with the RelativeOffsetRule field value
// and a boolean to check if the value has been set.
func (o *RelativeOffsetRulePreviewRequest) GetRelativeOffsetRuleOk() (*RelativeOffsetRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeOffsetRule, true
}

// SetRelativeOffsetRule sets field value
func (o *RelativeOffsetRulePreviewRequest) SetRelativeOffsetRule(v RelativeOffsetRule) {
	o.RelativeOffsetRule = v
}

func (o RelativeOffsetRulePreviewRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelativeOffsetRulePreviewRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.BusinessCalendar) {
		toSerialize["businessCalendar"] = o.BusinessCalendar
	}
	toSerialize["ruleType"] = o.RuleType
	toSerialize["relativeOffsetRule"] = o.RelativeOffsetRule
	return toSerialize, nil
}

type NullableRelativeOffsetRulePreviewRequest struct {
	value *RelativeOffsetRulePreviewRequest
	isSet bool
}

func (v NullableRelativeOffsetRulePreviewRequest) Get() *RelativeOffsetRulePreviewRequest {
	return v.value
}

func (v *NullableRelativeOffsetRulePreviewRequest) Set(val *RelativeOffsetRulePreviewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRelativeOffsetRulePreviewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRelativeOffsetRulePreviewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelativeOffsetRulePreviewRequest(val *RelativeOffsetRulePreviewRequest) *NullableRelativeOffsetRulePreviewRequest {
	return &NullableRelativeOffsetRulePreviewRequest{value: val, isSet: true}
}

func (v NullableRelativeOffsetRulePreviewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelativeOffsetRulePreviewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
