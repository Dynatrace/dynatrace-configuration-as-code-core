/*
Automation

Automation API allows working with workflows and various trigger options.

API version: 1.464.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation

import (
	"encoding/json"
	"time"
)

// checks if the RulePreviewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RulePreviewResponse{}

// RulePreviewResponse struct for RulePreviewResponse
type RulePreviewResponse struct {
	NextExecutions []time.Time `json:"nextExecutions"`
	Valid          bool        `json:"valid"`
	Error          string      `json:"error"`
}

// NewRulePreviewResponse instantiates a new RulePreviewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRulePreviewResponse(nextExecutions []time.Time, valid bool, error_ string) *RulePreviewResponse {
	this := RulePreviewResponse{}
	this.NextExecutions = nextExecutions
	this.Valid = valid
	this.Error = error_
	return &this
}

// NewRulePreviewResponseWithDefaults instantiates a new RulePreviewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRulePreviewResponseWithDefaults() *RulePreviewResponse {
	this := RulePreviewResponse{}
	return &this
}

// GetNextExecutions returns the NextExecutions field value
func (o *RulePreviewResponse) GetNextExecutions() []time.Time {
	if o == nil {
		var ret []time.Time
		return ret
	}

	return o.NextExecutions
}

// GetNextExecutionsOk returns a tuple with the NextExecutions field value
// and a boolean to check if the value has been set.
func (o *RulePreviewResponse) GetNextExecutionsOk() ([]time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextExecutions, true
}

// SetNextExecutions sets field value
func (o *RulePreviewResponse) SetNextExecutions(v []time.Time) {
	o.NextExecutions = v
}

// GetValid returns the Valid field value
func (o *RulePreviewResponse) GetValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Valid
}

// GetValidOk returns a tuple with the Valid field value
// and a boolean to check if the value has been set.
func (o *RulePreviewResponse) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Valid, true
}

// SetValid sets field value
func (o *RulePreviewResponse) SetValid(v bool) {
	o.Valid = v
}

// GetError returns the Error field value
func (o *RulePreviewResponse) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *RulePreviewResponse) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *RulePreviewResponse) SetError(v string) {
	o.Error = v
}

func (o RulePreviewResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RulePreviewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nextExecutions"] = o.NextExecutions
	toSerialize["valid"] = o.Valid
	toSerialize["error"] = o.Error
	return toSerialize, nil
}

type NullableRulePreviewResponse struct {
	value *RulePreviewResponse
	isSet bool
}

func (v NullableRulePreviewResponse) Get() *RulePreviewResponse {
	return v.value
}

func (v *NullableRulePreviewResponse) Set(val *RulePreviewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRulePreviewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRulePreviewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRulePreviewResponse(val *RulePreviewResponse) *NullableRulePreviewResponse {
	return &NullableRulePreviewResponse{value: val, isSet: true}
}

func (v NullableRulePreviewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRulePreviewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
