/*
Automation

Automation API allows working with workflows and various trigger options.

API version: 1.464.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation

import (
	"encoding/json"
)

// checks if the EventTriggerPreviewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventTriggerPreviewResponse{}

// EventTriggerPreviewResponse struct for EventTriggerPreviewResponse
type EventTriggerPreviewResponse struct {
	TriggerConfiguration EventTriggerPreviewResponseTriggerConfiguration `json:"triggerConfiguration"`
	FilterQuery          string                                          `json:"filterQuery"`
}

// NewEventTriggerPreviewResponse instantiates a new EventTriggerPreviewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventTriggerPreviewResponse(triggerConfiguration EventTriggerPreviewResponseTriggerConfiguration, filterQuery string) *EventTriggerPreviewResponse {
	this := EventTriggerPreviewResponse{}
	this.TriggerConfiguration = triggerConfiguration
	this.FilterQuery = filterQuery
	return &this
}

// NewEventTriggerPreviewResponseWithDefaults instantiates a new EventTriggerPreviewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventTriggerPreviewResponseWithDefaults() *EventTriggerPreviewResponse {
	this := EventTriggerPreviewResponse{}
	return &this
}

// GetTriggerConfiguration returns the TriggerConfiguration field value
func (o *EventTriggerPreviewResponse) GetTriggerConfiguration() EventTriggerPreviewResponseTriggerConfiguration {
	if o == nil {
		var ret EventTriggerPreviewResponseTriggerConfiguration
		return ret
	}

	return o.TriggerConfiguration
}

// GetTriggerConfigurationOk returns a tuple with the TriggerConfiguration field value
// and a boolean to check if the value has been set.
func (o *EventTriggerPreviewResponse) GetTriggerConfigurationOk() (*EventTriggerPreviewResponseTriggerConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TriggerConfiguration, true
}

// SetTriggerConfiguration sets field value
func (o *EventTriggerPreviewResponse) SetTriggerConfiguration(v EventTriggerPreviewResponseTriggerConfiguration) {
	o.TriggerConfiguration = v
}

// GetFilterQuery returns the FilterQuery field value
func (o *EventTriggerPreviewResponse) GetFilterQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FilterQuery
}

// GetFilterQueryOk returns a tuple with the FilterQuery field value
// and a boolean to check if the value has been set.
func (o *EventTriggerPreviewResponse) GetFilterQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilterQuery, true
}

// SetFilterQuery sets field value
func (o *EventTriggerPreviewResponse) SetFilterQuery(v string) {
	o.FilterQuery = v
}

func (o EventTriggerPreviewResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventTriggerPreviewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["triggerConfiguration"] = o.TriggerConfiguration
	toSerialize["filterQuery"] = o.FilterQuery
	return toSerialize, nil
}

type NullableEventTriggerPreviewResponse struct {
	value *EventTriggerPreviewResponse
	isSet bool
}

func (v NullableEventTriggerPreviewResponse) Get() *EventTriggerPreviewResponse {
	return v.value
}

func (v *NullableEventTriggerPreviewResponse) Set(val *EventTriggerPreviewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEventTriggerPreviewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEventTriggerPreviewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventTriggerPreviewResponse(val *EventTriggerPreviewResponse) *NullableEventTriggerPreviewResponse {
	return &NullableEventTriggerPreviewResponse{value: val, isSet: true}
}

func (v NullableEventTriggerPreviewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventTriggerPreviewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
