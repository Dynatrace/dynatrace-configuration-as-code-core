/*
Automation

Automation API allows working with workflows and various trigger options.

API version: 1.464.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation

import (
	"encoding/json"
)

// checks if the PreviewTaskInputRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewTaskInputRequest{}

// PreviewTaskInputRequest struct for PreviewTaskInputRequest
type PreviewTaskInputRequest struct {
	Expression map[string]interface{} `json:"expression"`
	Task       string                 `json:"task"`
	Workflow   WorkflowRequest        `json:"workflow"`
}

// NewPreviewTaskInputRequest instantiates a new PreviewTaskInputRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviewTaskInputRequest(expression map[string]interface{}, task string, workflow WorkflowRequest) *PreviewTaskInputRequest {
	this := PreviewTaskInputRequest{}
	this.Expression = expression
	this.Task = task
	this.Workflow = workflow
	return &this
}

// NewPreviewTaskInputRequestWithDefaults instantiates a new PreviewTaskInputRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewTaskInputRequestWithDefaults() *PreviewTaskInputRequest {
	this := PreviewTaskInputRequest{}
	return &this
}

// GetExpression returns the Expression field value
func (o *PreviewTaskInputRequest) GetExpression() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value
// and a boolean to check if the value has been set.
func (o *PreviewTaskInputRequest) GetExpressionOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Expression, true
}

// SetExpression sets field value
func (o *PreviewTaskInputRequest) SetExpression(v map[string]interface{}) {
	o.Expression = v
}

// GetTask returns the Task field value
func (o *PreviewTaskInputRequest) GetTask() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Task
}

// GetTaskOk returns a tuple with the Task field value
// and a boolean to check if the value has been set.
func (o *PreviewTaskInputRequest) GetTaskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Task, true
}

// SetTask sets field value
func (o *PreviewTaskInputRequest) SetTask(v string) {
	o.Task = v
}

// GetWorkflow returns the Workflow field value
func (o *PreviewTaskInputRequest) GetWorkflow() WorkflowRequest {
	if o == nil {
		var ret WorkflowRequest
		return ret
	}

	return o.Workflow
}

// GetWorkflowOk returns a tuple with the Workflow field value
// and a boolean to check if the value has been set.
func (o *PreviewTaskInputRequest) GetWorkflowOk() (*WorkflowRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workflow, true
}

// SetWorkflow sets field value
func (o *PreviewTaskInputRequest) SetWorkflow(v WorkflowRequest) {
	o.Workflow = v
}

func (o PreviewTaskInputRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewTaskInputRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["expression"] = o.Expression
	toSerialize["task"] = o.Task
	toSerialize["workflow"] = o.Workflow
	return toSerialize, nil
}

type NullablePreviewTaskInputRequest struct {
	value *PreviewTaskInputRequest
	isSet bool
}

func (v NullablePreviewTaskInputRequest) Get() *PreviewTaskInputRequest {
	return v.value
}

func (v *NullablePreviewTaskInputRequest) Set(val *PreviewTaskInputRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewTaskInputRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewTaskInputRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewTaskInputRequest(val *PreviewTaskInputRequest) *NullablePreviewTaskInputRequest {
	return &NullablePreviewTaskInputRequest{value: val, isSet: true}
}

func (v NullablePreviewTaskInputRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewTaskInputRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
