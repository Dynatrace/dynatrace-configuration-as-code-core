/*
Automation

Automation API allows working with workflows and various trigger options.

API version: 1.464.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation

import (
	"encoding/json"
)

// checks if the PreviewTaskInputResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewTaskInputResponse{}

// PreviewTaskInputResponse struct for PreviewTaskInputResponse
type PreviewTaskInputResponse struct {
	Valid bool                   `json:"valid"`
	Value map[string]interface{} `json:"value"`
	Error map[string]interface{} `json:"error"`
}

// NewPreviewTaskInputResponse instantiates a new PreviewTaskInputResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviewTaskInputResponse(valid bool, value map[string]interface{}, error_ map[string]interface{}) *PreviewTaskInputResponse {
	this := PreviewTaskInputResponse{}
	this.Valid = valid
	this.Value = value
	this.Error = error_
	return &this
}

// NewPreviewTaskInputResponseWithDefaults instantiates a new PreviewTaskInputResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewTaskInputResponseWithDefaults() *PreviewTaskInputResponse {
	this := PreviewTaskInputResponse{}
	return &this
}

// GetValid returns the Valid field value
func (o *PreviewTaskInputResponse) GetValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Valid
}

// GetValidOk returns a tuple with the Valid field value
// and a boolean to check if the value has been set.
func (o *PreviewTaskInputResponse) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Valid, true
}

// SetValid sets field value
func (o *PreviewTaskInputResponse) SetValid(v bool) {
	o.Valid = v
}

// GetValue returns the Value field value
func (o *PreviewTaskInputResponse) GetValue() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PreviewTaskInputResponse) GetValueOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Value, true
}

// SetValue sets field value
func (o *PreviewTaskInputResponse) SetValue(v map[string]interface{}) {
	o.Value = v
}

// GetError returns the Error field value
func (o *PreviewTaskInputResponse) GetError() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *PreviewTaskInputResponse) GetErrorOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Error, true
}

// SetError sets field value
func (o *PreviewTaskInputResponse) SetError(v map[string]interface{}) {
	o.Error = v
}

func (o PreviewTaskInputResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewTaskInputResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["valid"] = o.Valid
	toSerialize["value"] = o.Value
	toSerialize["error"] = o.Error
	return toSerialize, nil
}

type NullablePreviewTaskInputResponse struct {
	value *PreviewTaskInputResponse
	isSet bool
}

func (v NullablePreviewTaskInputResponse) Get() *PreviewTaskInputResponse {
	return v.value
}

func (v *NullablePreviewTaskInputResponse) Set(val *PreviewTaskInputResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewTaskInputResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewTaskInputResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewTaskInputResponse(val *PreviewTaskInputResponse) *NullablePreviewTaskInputResponse {
	return &NullablePreviewTaskInputResponse{value: val, isSet: true}
}

func (v NullablePreviewTaskInputResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewTaskInputResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
