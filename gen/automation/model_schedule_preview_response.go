/*
Automation

Automation API allows working with workflows and various trigger options.

API version: 1.464.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automation

import (
	"encoding/json"
	"time"
)

// checks if the SchedulePreviewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulePreviewResponse{}

// SchedulePreviewResponse struct for SchedulePreviewResponse
type SchedulePreviewResponse struct {
	NextExecutions []time.Time `json:"nextExecutions"`
	Valid          bool        `json:"valid"`
	Error          string      `json:"error"`
}

// NewSchedulePreviewResponse instantiates a new SchedulePreviewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulePreviewResponse(nextExecutions []time.Time, valid bool, error_ string) *SchedulePreviewResponse {
	this := SchedulePreviewResponse{}
	this.NextExecutions = nextExecutions
	this.Valid = valid
	this.Error = error_
	return &this
}

// NewSchedulePreviewResponseWithDefaults instantiates a new SchedulePreviewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulePreviewResponseWithDefaults() *SchedulePreviewResponse {
	this := SchedulePreviewResponse{}
	return &this
}

// GetNextExecutions returns the NextExecutions field value
func (o *SchedulePreviewResponse) GetNextExecutions() []time.Time {
	if o == nil {
		var ret []time.Time
		return ret
	}

	return o.NextExecutions
}

// GetNextExecutionsOk returns a tuple with the NextExecutions field value
// and a boolean to check if the value has been set.
func (o *SchedulePreviewResponse) GetNextExecutionsOk() ([]time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextExecutions, true
}

// SetNextExecutions sets field value
func (o *SchedulePreviewResponse) SetNextExecutions(v []time.Time) {
	o.NextExecutions = v
}

// GetValid returns the Valid field value
func (o *SchedulePreviewResponse) GetValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Valid
}

// GetValidOk returns a tuple with the Valid field value
// and a boolean to check if the value has been set.
func (o *SchedulePreviewResponse) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Valid, true
}

// SetValid sets field value
func (o *SchedulePreviewResponse) SetValid(v bool) {
	o.Valid = v
}

// GetError returns the Error field value
func (o *SchedulePreviewResponse) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *SchedulePreviewResponse) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *SchedulePreviewResponse) SetError(v string) {
	o.Error = v
}

func (o SchedulePreviewResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulePreviewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nextExecutions"] = o.NextExecutions
	toSerialize["valid"] = o.Valid
	toSerialize["error"] = o.Error
	return toSerialize, nil
}

type NullableSchedulePreviewResponse struct {
	value *SchedulePreviewResponse
	isSet bool
}

func (v NullableSchedulePreviewResponse) Get() *SchedulePreviewResponse {
	return v.value
}

func (v *NullableSchedulePreviewResponse) Set(val *SchedulePreviewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulePreviewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulePreviewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulePreviewResponse(val *SchedulePreviewResponse) *NullableSchedulePreviewResponse {
	return &NullableSchedulePreviewResponse{value: val, isSet: true}
}

func (v NullableSchedulePreviewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulePreviewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
