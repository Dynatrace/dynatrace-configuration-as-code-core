/*
Grail - Storage Management

Here you can find the  * The Dynatrace Bucket Management API for Grail. Get more information about   use cases and examples from   the <a href=\"https://docs.dynatrace.com/docs/shortlink/assign-bucket-table-permissions\">   Dynatrace Documentation</a>

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package buckets

import (
	"encoding/json"
)

// checks if the PartialUpdateBucket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartialUpdateBucket{}

// PartialUpdateBucket struct for PartialUpdateBucket
type PartialUpdateBucket struct {
	// Descriptive name of the bucket. No restriction regarding unique naming or valid characters.
	DisplayName *string `json:"displayName,omitempty"`
	// The retention period in days of the data in the bucket. Important note: the new retention days will also apply to existing records. Shortening the retention period could result in data deletion!
	RetentionDays *int32 `json:"retentionDays,omitempty"`
}

// NewPartialUpdateBucket instantiates a new PartialUpdateBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartialUpdateBucket() *PartialUpdateBucket {
	this := PartialUpdateBucket{}
	return &this
}

// NewPartialUpdateBucketWithDefaults instantiates a new PartialUpdateBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartialUpdateBucketWithDefaults() *PartialUpdateBucket {
	this := PartialUpdateBucket{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PartialUpdateBucket) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartialUpdateBucket) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PartialUpdateBucket) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PartialUpdateBucket) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetRetentionDays returns the RetentionDays field value if set, zero value otherwise.
func (o *PartialUpdateBucket) GetRetentionDays() int32 {
	if o == nil || IsNil(o.RetentionDays) {
		var ret int32
		return ret
	}
	return *o.RetentionDays
}

// GetRetentionDaysOk returns a tuple with the RetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartialUpdateBucket) GetRetentionDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.RetentionDays) {
		return nil, false
	}
	return o.RetentionDays, true
}

// HasRetentionDays returns a boolean if a field has been set.
func (o *PartialUpdateBucket) HasRetentionDays() bool {
	if o != nil && !IsNil(o.RetentionDays) {
		return true
	}

	return false
}

// SetRetentionDays gets a reference to the given int32 and assigns it to the RetentionDays field.
func (o *PartialUpdateBucket) SetRetentionDays(v int32) {
	o.RetentionDays = &v
}

func (o PartialUpdateBucket) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartialUpdateBucket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.RetentionDays) {
		toSerialize["retentionDays"] = o.RetentionDays
	}
	return toSerialize, nil
}

type NullablePartialUpdateBucket struct {
	value *PartialUpdateBucket
	isSet bool
}

func (v NullablePartialUpdateBucket) Get() *PartialUpdateBucket {
	return v.value
}

func (v *NullablePartialUpdateBucket) Set(val *PartialUpdateBucket) {
	v.value = val
	v.isSet = true
}

func (v NullablePartialUpdateBucket) IsSet() bool {
	return v.isSet
}

func (v *NullablePartialUpdateBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartialUpdateBucket(val *PartialUpdateBucket) *NullablePartialUpdateBucket {
	return &NullablePartialUpdateBucket{value: val, isSet: true}
}

func (v NullablePartialUpdateBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartialUpdateBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
