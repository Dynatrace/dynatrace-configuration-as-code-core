/*
Dynatrace Account Management API

The enterprise management API for Dynatrace SaaS enables automation of operational tasks related to user access and environment lifecycle management.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmanagement

import (
	"encoding/json"
)

// checks if the ClusterListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterListDto{}

// ClusterListDto struct for ClusterListDto
type ClusterListDto struct {
	// Lists all clusters in a managed account
	Data []ClusterDto `json:"data"`
}

// NewClusterListDto instantiates a new ClusterListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterListDto(data []ClusterDto) *ClusterListDto {
	this := ClusterListDto{}
	this.Data = data
	return &this
}

// NewClusterListDtoWithDefaults instantiates a new ClusterListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterListDtoWithDefaults() *ClusterListDto {
	this := ClusterListDto{}
	return &this
}

// GetData returns the Data field value
func (o *ClusterListDto) GetData() []ClusterDto {
	if o == nil {
		var ret []ClusterDto
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ClusterListDto) GetDataOk() ([]ClusterDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ClusterListDto) SetData(v []ClusterDto) {
	o.Data = v
}

func (o ClusterListDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableClusterListDto struct {
	value *ClusterListDto
	isSet bool
}

func (v NullableClusterListDto) Get() *ClusterListDto {
	return v.value
}

func (v *NullableClusterListDto) Set(val *ClusterListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterListDto(val *ClusterListDto) *NullableClusterListDto {
	return &NullableClusterListDto{value: val, isSet: true}
}

func (v NullableClusterListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
