/*
Dynatrace Account Management API

The enterprise management API for Dynatrace SaaS enables automation of operational tasks related to user access and environment lifecycle management.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmanagement

import (
	"encoding/json"
)

// checks if the UserLoginMetaDataDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserLoginMetaDataDto{}

// UserLoginMetaDataDto struct for UserLoginMetaDataDto
type UserLoginMetaDataDto struct {
	// The number of successful sign-ins.
	SuccessfulLoginCounter float32 `json:"successfulLoginCounter"`
	// The number of failed sign-ins.
	FailedLoginCounter float32 `json:"failedLoginCounter"`
	// The date and time of the most recent successful sign-in in `2021-05-01T15:11:00Z` format.
	LastSuccessfulLogin string `json:"lastSuccessfulLogin"`
	// The date and time of the most recent failed sign-in in `2021-05-01T15:11:00Z` format.
	LastFailedLogin string `json:"lastFailedLogin"`
	// The date and time of user creation in `2021-05-01T15:11:00Z` format.
	CreatedAt string `json:"createdAt"`
	// The date and time of the most recent modification to the user in `2021-05-01T15:11:00Z` format.
	UpdatedAt string `json:"updatedAt"`
}

// NewUserLoginMetaDataDto instantiates a new UserLoginMetaDataDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserLoginMetaDataDto(successfulLoginCounter float32, failedLoginCounter float32, lastSuccessfulLogin string, lastFailedLogin string, createdAt string, updatedAt string) *UserLoginMetaDataDto {
	this := UserLoginMetaDataDto{}
	this.SuccessfulLoginCounter = successfulLoginCounter
	this.FailedLoginCounter = failedLoginCounter
	this.LastSuccessfulLogin = lastSuccessfulLogin
	this.LastFailedLogin = lastFailedLogin
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewUserLoginMetaDataDtoWithDefaults instantiates a new UserLoginMetaDataDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserLoginMetaDataDtoWithDefaults() *UserLoginMetaDataDto {
	this := UserLoginMetaDataDto{}
	return &this
}

// GetSuccessfulLoginCounter returns the SuccessfulLoginCounter field value
func (o *UserLoginMetaDataDto) GetSuccessfulLoginCounter() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SuccessfulLoginCounter
}

// GetSuccessfulLoginCounterOk returns a tuple with the SuccessfulLoginCounter field value
// and a boolean to check if the value has been set.
func (o *UserLoginMetaDataDto) GetSuccessfulLoginCounterOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuccessfulLoginCounter, true
}

// SetSuccessfulLoginCounter sets field value
func (o *UserLoginMetaDataDto) SetSuccessfulLoginCounter(v float32) {
	o.SuccessfulLoginCounter = v
}

// GetFailedLoginCounter returns the FailedLoginCounter field value
func (o *UserLoginMetaDataDto) GetFailedLoginCounter() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FailedLoginCounter
}

// GetFailedLoginCounterOk returns a tuple with the FailedLoginCounter field value
// and a boolean to check if the value has been set.
func (o *UserLoginMetaDataDto) GetFailedLoginCounterOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailedLoginCounter, true
}

// SetFailedLoginCounter sets field value
func (o *UserLoginMetaDataDto) SetFailedLoginCounter(v float32) {
	o.FailedLoginCounter = v
}

// GetLastSuccessfulLogin returns the LastSuccessfulLogin field value
func (o *UserLoginMetaDataDto) GetLastSuccessfulLogin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastSuccessfulLogin
}

// GetLastSuccessfulLoginOk returns a tuple with the LastSuccessfulLogin field value
// and a boolean to check if the value has been set.
func (o *UserLoginMetaDataDto) GetLastSuccessfulLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSuccessfulLogin, true
}

// SetLastSuccessfulLogin sets field value
func (o *UserLoginMetaDataDto) SetLastSuccessfulLogin(v string) {
	o.LastSuccessfulLogin = v
}

// GetLastFailedLogin returns the LastFailedLogin field value
func (o *UserLoginMetaDataDto) GetLastFailedLogin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastFailedLogin
}

// GetLastFailedLoginOk returns a tuple with the LastFailedLogin field value
// and a boolean to check if the value has been set.
func (o *UserLoginMetaDataDto) GetLastFailedLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastFailedLogin, true
}

// SetLastFailedLogin sets field value
func (o *UserLoginMetaDataDto) SetLastFailedLogin(v string) {
	o.LastFailedLogin = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *UserLoginMetaDataDto) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UserLoginMetaDataDto) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UserLoginMetaDataDto) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *UserLoginMetaDataDto) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *UserLoginMetaDataDto) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *UserLoginMetaDataDto) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o UserLoginMetaDataDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserLoginMetaDataDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["successfulLoginCounter"] = o.SuccessfulLoginCounter
	toSerialize["failedLoginCounter"] = o.FailedLoginCounter
	toSerialize["lastSuccessfulLogin"] = o.LastSuccessfulLogin
	toSerialize["lastFailedLogin"] = o.LastFailedLogin
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableUserLoginMetaDataDto struct {
	value *UserLoginMetaDataDto
	isSet bool
}

func (v NullableUserLoginMetaDataDto) Get() *UserLoginMetaDataDto {
	return v.value
}

func (v *NullableUserLoginMetaDataDto) Set(val *UserLoginMetaDataDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUserLoginMetaDataDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUserLoginMetaDataDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserLoginMetaDataDto(val *UserLoginMetaDataDto) *NullableUserLoginMetaDataDto {
	return &NullableUserLoginMetaDataDto{value: val, isSet: true}
}

func (v NullableUserLoginMetaDataDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserLoginMetaDataDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
