/*
Dynatrace Account Management API

The enterprise management API for Dynatrace SaaS enables automation of operational tasks related to user access and environment lifecycle management.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmanagement

import (
	"encoding/json"
	"fmt"
)

// checks if the AccountLimitsPage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountLimitsPage{}

// AccountLimitsPage struct for AccountLimitsPage
type AccountLimitsPage struct {
	// Page size.
	PageSize float32 `json:"pageSize"`
	// Page number.
	PageNumber float32 `json:"pageNumber"`
	// Total count of entries.
	Total                float32            `json:"total"`
	Results              []AccountLimitsDto `json:"results"`
	AdditionalProperties map[string]interface{}
}

type _AccountLimitsPage AccountLimitsPage

// NewAccountLimitsPage instantiates a new AccountLimitsPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountLimitsPage(pageSize float32, pageNumber float32, total float32, results []AccountLimitsDto) *AccountLimitsPage {
	this := AccountLimitsPage{}
	this.PageSize = pageSize
	this.PageNumber = pageNumber
	this.Total = total
	this.Results = results
	return &this
}

// NewAccountLimitsPageWithDefaults instantiates a new AccountLimitsPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountLimitsPageWithDefaults() *AccountLimitsPage {
	this := AccountLimitsPage{}
	return &this
}

// GetPageSize returns the PageSize field value
func (o *AccountLimitsPage) GetPageSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *AccountLimitsPage) GetPageSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *AccountLimitsPage) SetPageSize(v float32) {
	o.PageSize = v
}

// GetPageNumber returns the PageNumber field value
func (o *AccountLimitsPage) GetPageNumber() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value
// and a boolean to check if the value has been set.
func (o *AccountLimitsPage) GetPageNumberOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageNumber, true
}

// SetPageNumber sets field value
func (o *AccountLimitsPage) SetPageNumber(v float32) {
	o.PageNumber = v
}

// GetTotal returns the Total field value
func (o *AccountLimitsPage) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *AccountLimitsPage) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *AccountLimitsPage) SetTotal(v float32) {
	o.Total = v
}

// GetResults returns the Results field value
func (o *AccountLimitsPage) GetResults() []AccountLimitsDto {
	if o == nil {
		var ret []AccountLimitsDto
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *AccountLimitsPage) GetResultsOk() ([]AccountLimitsDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *AccountLimitsPage) SetResults(v []AccountLimitsDto) {
	o.Results = v
}

func (o AccountLimitsPage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountLimitsPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pageSize"] = o.PageSize
	toSerialize["pageNumber"] = o.PageNumber
	toSerialize["total"] = o.Total
	toSerialize["results"] = o.Results

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountLimitsPage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pageSize",
		"pageNumber",
		"total",
		"results",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountLimitsPage := _AccountLimitsPage{}

	err = json.Unmarshal(data, &varAccountLimitsPage)

	if err != nil {
		return err
	}

	*o = AccountLimitsPage(varAccountLimitsPage)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pageSize")
		delete(additionalProperties, "pageNumber")
		delete(additionalProperties, "total")
		delete(additionalProperties, "results")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountLimitsPage struct {
	value *AccountLimitsPage
	isSet bool
}

func (v NullableAccountLimitsPage) Get() *AccountLimitsPage {
	return v.value
}

func (v *NullableAccountLimitsPage) Set(val *AccountLimitsPage) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountLimitsPage) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountLimitsPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountLimitsPage(val *AccountLimitsPage) *NullableAccountLimitsPage {
	return &NullableAccountLimitsPage{value: val, isSet: true}
}

func (v NullableAccountLimitsPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountLimitsPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
