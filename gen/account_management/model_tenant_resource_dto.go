/*
Dynatrace Account Management API

The enterprise management API for Dynatrace SaaS enables automation of operational tasks related to user access and environment lifecycle management.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmanagement

import (
	"encoding/json"
)

// checks if the TenantResourceDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantResourceDto{}

// TenantResourceDto struct for TenantResourceDto
type TenantResourceDto struct {
	// The name of the environment.
	Name string `json:"name"`
	// The ID of the environment.
	Id string `json:"id"`
}

// NewTenantResourceDto instantiates a new TenantResourceDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantResourceDto(name string, id string) *TenantResourceDto {
	this := TenantResourceDto{}
	this.Name = name
	this.Id = id
	return &this
}

// NewTenantResourceDtoWithDefaults instantiates a new TenantResourceDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantResourceDtoWithDefaults() *TenantResourceDto {
	this := TenantResourceDto{}
	return &this
}

// GetName returns the Name field value
func (o *TenantResourceDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TenantResourceDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TenantResourceDto) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *TenantResourceDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TenantResourceDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TenantResourceDto) SetId(v string) {
	o.Id = v
}

func (o TenantResourceDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantResourceDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableTenantResourceDto struct {
	value *TenantResourceDto
	isSet bool
}

func (v NullableTenantResourceDto) Get() *TenantResourceDto {
	return v.value
}

func (v *NullableTenantResourceDto) Set(val *TenantResourceDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantResourceDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantResourceDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantResourceDto(val *TenantResourceDto) *NullableTenantResourceDto {
	return &NullableTenantResourceDto{value: val, isSet: true}
}

func (v NullableTenantResourceDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantResourceDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
