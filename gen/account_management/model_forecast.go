/*
Dynatrace Account Management API

The enterprise management API for Dynatrace SaaS enables automation of operational tasks related to user access and environment lifecycle management.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmanagement

import (
	"encoding/json"
	"time"
)

// checks if the Forecast type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Forecast{}

// Forecast struct for Forecast
type Forecast struct {
	// The median of the forecast snapshot.
	ForecastMedian float32 `json:"forecastMedian"`
	// The lower bound for the forecast snapshot.
	ForecastLower float32 `json:"forecastLower"`
	// The upper bound for the forecast snapshot.
	ForecastUpper float32 `json:"forecastUpper"`
	// The budget for the forecast snapshot.
	Budget float32 `json:"budget"`
	// The budget percent for the forecast snapshot.
	ForecastBudgetPct float32 `json:"forecastBudgetPct"`
	// The date the forecast snapshot's budget reached the quota amount.
	ForecastBudgetDate time.Time `json:"forecastBudgetDate"`
	// The date the forecast snapshot was created.
	ForecastCreatedAt time.Time `json:"forecastCreatedAt"`
}

// NewForecast instantiates a new Forecast object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForecast(forecastMedian float32, forecastLower float32, forecastUpper float32, budget float32, forecastBudgetPct float32, forecastBudgetDate time.Time, forecastCreatedAt time.Time) *Forecast {
	this := Forecast{}
	this.ForecastMedian = forecastMedian
	this.ForecastLower = forecastLower
	this.ForecastUpper = forecastUpper
	this.Budget = budget
	this.ForecastBudgetPct = forecastBudgetPct
	this.ForecastBudgetDate = forecastBudgetDate
	this.ForecastCreatedAt = forecastCreatedAt
	return &this
}

// NewForecastWithDefaults instantiates a new Forecast object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForecastWithDefaults() *Forecast {
	this := Forecast{}
	return &this
}

// GetForecastMedian returns the ForecastMedian field value
func (o *Forecast) GetForecastMedian() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ForecastMedian
}

// GetForecastMedianOk returns a tuple with the ForecastMedian field value
// and a boolean to check if the value has been set.
func (o *Forecast) GetForecastMedianOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForecastMedian, true
}

// SetForecastMedian sets field value
func (o *Forecast) SetForecastMedian(v float32) {
	o.ForecastMedian = v
}

// GetForecastLower returns the ForecastLower field value
func (o *Forecast) GetForecastLower() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ForecastLower
}

// GetForecastLowerOk returns a tuple with the ForecastLower field value
// and a boolean to check if the value has been set.
func (o *Forecast) GetForecastLowerOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForecastLower, true
}

// SetForecastLower sets field value
func (o *Forecast) SetForecastLower(v float32) {
	o.ForecastLower = v
}

// GetForecastUpper returns the ForecastUpper field value
func (o *Forecast) GetForecastUpper() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ForecastUpper
}

// GetForecastUpperOk returns a tuple with the ForecastUpper field value
// and a boolean to check if the value has been set.
func (o *Forecast) GetForecastUpperOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForecastUpper, true
}

// SetForecastUpper sets field value
func (o *Forecast) SetForecastUpper(v float32) {
	o.ForecastUpper = v
}

// GetBudget returns the Budget field value
func (o *Forecast) GetBudget() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Budget
}

// GetBudgetOk returns a tuple with the Budget field value
// and a boolean to check if the value has been set.
func (o *Forecast) GetBudgetOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Budget, true
}

// SetBudget sets field value
func (o *Forecast) SetBudget(v float32) {
	o.Budget = v
}

// GetForecastBudgetPct returns the ForecastBudgetPct field value
func (o *Forecast) GetForecastBudgetPct() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ForecastBudgetPct
}

// GetForecastBudgetPctOk returns a tuple with the ForecastBudgetPct field value
// and a boolean to check if the value has been set.
func (o *Forecast) GetForecastBudgetPctOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForecastBudgetPct, true
}

// SetForecastBudgetPct sets field value
func (o *Forecast) SetForecastBudgetPct(v float32) {
	o.ForecastBudgetPct = v
}

// GetForecastBudgetDate returns the ForecastBudgetDate field value
func (o *Forecast) GetForecastBudgetDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ForecastBudgetDate
}

// GetForecastBudgetDateOk returns a tuple with the ForecastBudgetDate field value
// and a boolean to check if the value has been set.
func (o *Forecast) GetForecastBudgetDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForecastBudgetDate, true
}

// SetForecastBudgetDate sets field value
func (o *Forecast) SetForecastBudgetDate(v time.Time) {
	o.ForecastBudgetDate = v
}

// GetForecastCreatedAt returns the ForecastCreatedAt field value
func (o *Forecast) GetForecastCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ForecastCreatedAt
}

// GetForecastCreatedAtOk returns a tuple with the ForecastCreatedAt field value
// and a boolean to check if the value has been set.
func (o *Forecast) GetForecastCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForecastCreatedAt, true
}

// SetForecastCreatedAt sets field value
func (o *Forecast) SetForecastCreatedAt(v time.Time) {
	o.ForecastCreatedAt = v
}

func (o Forecast) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Forecast) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["forecastMedian"] = o.ForecastMedian
	toSerialize["forecastLower"] = o.ForecastLower
	toSerialize["forecastUpper"] = o.ForecastUpper
	toSerialize["budget"] = o.Budget
	toSerialize["forecastBudgetPct"] = o.ForecastBudgetPct
	toSerialize["forecastBudgetDate"] = o.ForecastBudgetDate
	toSerialize["forecastCreatedAt"] = o.ForecastCreatedAt
	return toSerialize, nil
}

type NullableForecast struct {
	value *Forecast
	isSet bool
}

func (v NullableForecast) Get() *Forecast {
	return v.value
}

func (v *NullableForecast) Set(val *Forecast) {
	v.value = val
	v.isSet = true
}

func (v NullableForecast) IsSet() bool {
	return v.isSet
}

func (v *NullableForecast) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForecast(val *Forecast) *NullableForecast {
	return &NullableForecast{value: val, isSet: true}
}

func (v NullableForecast) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForecast) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
