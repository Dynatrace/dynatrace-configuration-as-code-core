/*
Dynatrace Account Management API

The enterprise management API for Dynatrace SaaS enables automation of operational tasks related to user access and environment lifecycle management.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmanagement

import (
	"encoding/json"
	"fmt"
)

// checks if the ExternalServiceUsersPageDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalServiceUsersPageDto{}

// ExternalServiceUsersPageDto struct for ExternalServiceUsersPageDto
type ExternalServiceUsersPageDto struct {
	Results []ExternalServiceUserDto `json:"results"`
	// Next page key to be used in querying for next results page
	NextPageKey *string `json:"nextPageKey,omitempty"`
	// Total number of service users
	TotalCount           float32 `json:"totalCount"`
	AdditionalProperties map[string]interface{}
}

type _ExternalServiceUsersPageDto ExternalServiceUsersPageDto

// NewExternalServiceUsersPageDto instantiates a new ExternalServiceUsersPageDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalServiceUsersPageDto(results []ExternalServiceUserDto, totalCount float32) *ExternalServiceUsersPageDto {
	this := ExternalServiceUsersPageDto{}
	this.Results = results
	this.TotalCount = totalCount
	return &this
}

// NewExternalServiceUsersPageDtoWithDefaults instantiates a new ExternalServiceUsersPageDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalServiceUsersPageDtoWithDefaults() *ExternalServiceUsersPageDto {
	this := ExternalServiceUsersPageDto{}
	return &this
}

// GetResults returns the Results field value
func (o *ExternalServiceUsersPageDto) GetResults() []ExternalServiceUserDto {
	if o == nil {
		var ret []ExternalServiceUserDto
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *ExternalServiceUsersPageDto) GetResultsOk() ([]ExternalServiceUserDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *ExternalServiceUsersPageDto) SetResults(v []ExternalServiceUserDto) {
	o.Results = v
}

// GetNextPageKey returns the NextPageKey field value if set, zero value otherwise.
func (o *ExternalServiceUsersPageDto) GetNextPageKey() string {
	if o == nil || IsNil(o.NextPageKey) {
		var ret string
		return ret
	}
	return *o.NextPageKey
}

// GetNextPageKeyOk returns a tuple with the NextPageKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalServiceUsersPageDto) GetNextPageKeyOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageKey) {
		return nil, false
	}
	return o.NextPageKey, true
}

// HasNextPageKey returns a boolean if a field has been set.
func (o *ExternalServiceUsersPageDto) HasNextPageKey() bool {
	if o != nil && !IsNil(o.NextPageKey) {
		return true
	}

	return false
}

// SetNextPageKey gets a reference to the given string and assigns it to the NextPageKey field.
func (o *ExternalServiceUsersPageDto) SetNextPageKey(v string) {
	o.NextPageKey = &v
}

// GetTotalCount returns the TotalCount field value
func (o *ExternalServiceUsersPageDto) GetTotalCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *ExternalServiceUsersPageDto) GetTotalCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *ExternalServiceUsersPageDto) SetTotalCount(v float32) {
	o.TotalCount = v
}

func (o ExternalServiceUsersPageDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalServiceUsersPageDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	if !IsNil(o.NextPageKey) {
		toSerialize["nextPageKey"] = o.NextPageKey
	}
	toSerialize["totalCount"] = o.TotalCount

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalServiceUsersPageDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"results",
		"totalCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalServiceUsersPageDto := _ExternalServiceUsersPageDto{}

	err = json.Unmarshal(data, &varExternalServiceUsersPageDto)

	if err != nil {
		return err
	}

	*o = ExternalServiceUsersPageDto(varExternalServiceUsersPageDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "results")
		delete(additionalProperties, "nextPageKey")
		delete(additionalProperties, "totalCount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalServiceUsersPageDto struct {
	value *ExternalServiceUsersPageDto
	isSet bool
}

func (v NullableExternalServiceUsersPageDto) Get() *ExternalServiceUsersPageDto {
	return v.value
}

func (v *NullableExternalServiceUsersPageDto) Set(val *ExternalServiceUsersPageDto) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalServiceUsersPageDto) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalServiceUsersPageDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalServiceUsersPageDto(val *ExternalServiceUsersPageDto) *NullableExternalServiceUsersPageDto {
	return &NullableExternalServiceUsersPageDto{value: val, isSet: true}
}

func (v NullableExternalServiceUsersPageDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalServiceUsersPageDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
