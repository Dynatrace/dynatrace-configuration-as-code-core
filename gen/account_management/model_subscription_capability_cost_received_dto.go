/*
Dynatrace Account Management API

The enterprise management API for Dynatrace SaaS enables automation of operational tasks related to user access and environment lifecycle management.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmanagement

import (
	"encoding/json"
	"fmt"
)

// checks if the SubscriptionCapabilityCostReceivedDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionCapabilityCostReceivedDto{}

// SubscriptionCapabilityCostReceivedDto struct for SubscriptionCapabilityCostReceivedDto
type SubscriptionCapabilityCostReceivedDto struct {
	// The start time for the capability cost in `2021-05-01T15:11:00Z` format.
	StartTime string `json:"startTime"`
	// The end time for the capability cost in `2021-05-01T15:11:00Z` format.
	EndTime string `json:"endTime"`
	// The total cost for all the capabilities.
	Value float32 `json:"value"`
	// The currency of the cost.
	CurrencyCode string `json:"currencyCode"`
	// The key of the subscription capability.
	CapabilityKey string `json:"capabilityKey"`
	// The display name of the subscription capability.
	CapabilityName string `json:"capabilityName"`
	// The booking date of the subscription capability in `2021-05-01T15:11:00Z` format.
	BookingDate          string `json:"bookingDate"`
	AdditionalProperties map[string]interface{}
}

type _SubscriptionCapabilityCostReceivedDto SubscriptionCapabilityCostReceivedDto

// NewSubscriptionCapabilityCostReceivedDto instantiates a new SubscriptionCapabilityCostReceivedDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionCapabilityCostReceivedDto(startTime string, endTime string, value float32, currencyCode string, capabilityKey string, capabilityName string, bookingDate string) *SubscriptionCapabilityCostReceivedDto {
	this := SubscriptionCapabilityCostReceivedDto{}
	this.StartTime = startTime
	this.EndTime = endTime
	this.Value = value
	this.CurrencyCode = currencyCode
	this.CapabilityKey = capabilityKey
	this.CapabilityName = capabilityName
	this.BookingDate = bookingDate
	return &this
}

// NewSubscriptionCapabilityCostReceivedDtoWithDefaults instantiates a new SubscriptionCapabilityCostReceivedDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionCapabilityCostReceivedDtoWithDefaults() *SubscriptionCapabilityCostReceivedDto {
	this := SubscriptionCapabilityCostReceivedDto{}
	return &this
}

// GetStartTime returns the StartTime field value
func (o *SubscriptionCapabilityCostReceivedDto) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCapabilityCostReceivedDto) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *SubscriptionCapabilityCostReceivedDto) SetStartTime(v string) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *SubscriptionCapabilityCostReceivedDto) GetEndTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCapabilityCostReceivedDto) GetEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *SubscriptionCapabilityCostReceivedDto) SetEndTime(v string) {
	o.EndTime = v
}

// GetValue returns the Value field value
func (o *SubscriptionCapabilityCostReceivedDto) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCapabilityCostReceivedDto) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SubscriptionCapabilityCostReceivedDto) SetValue(v float32) {
	o.Value = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *SubscriptionCapabilityCostReceivedDto) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCapabilityCostReceivedDto) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *SubscriptionCapabilityCostReceivedDto) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetCapabilityKey returns the CapabilityKey field value
func (o *SubscriptionCapabilityCostReceivedDto) GetCapabilityKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CapabilityKey
}

// GetCapabilityKeyOk returns a tuple with the CapabilityKey field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCapabilityCostReceivedDto) GetCapabilityKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CapabilityKey, true
}

// SetCapabilityKey sets field value
func (o *SubscriptionCapabilityCostReceivedDto) SetCapabilityKey(v string) {
	o.CapabilityKey = v
}

// GetCapabilityName returns the CapabilityName field value
func (o *SubscriptionCapabilityCostReceivedDto) GetCapabilityName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CapabilityName
}

// GetCapabilityNameOk returns a tuple with the CapabilityName field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCapabilityCostReceivedDto) GetCapabilityNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CapabilityName, true
}

// SetCapabilityName sets field value
func (o *SubscriptionCapabilityCostReceivedDto) SetCapabilityName(v string) {
	o.CapabilityName = v
}

// GetBookingDate returns the BookingDate field value
func (o *SubscriptionCapabilityCostReceivedDto) GetBookingDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BookingDate
}

// GetBookingDateOk returns a tuple with the BookingDate field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCapabilityCostReceivedDto) GetBookingDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BookingDate, true
}

// SetBookingDate sets field value
func (o *SubscriptionCapabilityCostReceivedDto) SetBookingDate(v string) {
	o.BookingDate = v
}

func (o SubscriptionCapabilityCostReceivedDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionCapabilityCostReceivedDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["value"] = o.Value
	toSerialize["currencyCode"] = o.CurrencyCode
	toSerialize["capabilityKey"] = o.CapabilityKey
	toSerialize["capabilityName"] = o.CapabilityName
	toSerialize["bookingDate"] = o.BookingDate

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SubscriptionCapabilityCostReceivedDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startTime",
		"endTime",
		"value",
		"currencyCode",
		"capabilityKey",
		"capabilityName",
		"bookingDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriptionCapabilityCostReceivedDto := _SubscriptionCapabilityCostReceivedDto{}

	err = json.Unmarshal(data, &varSubscriptionCapabilityCostReceivedDto)

	if err != nil {
		return err
	}

	*o = SubscriptionCapabilityCostReceivedDto(varSubscriptionCapabilityCostReceivedDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "startTime")
		delete(additionalProperties, "endTime")
		delete(additionalProperties, "value")
		delete(additionalProperties, "currencyCode")
		delete(additionalProperties, "capabilityKey")
		delete(additionalProperties, "capabilityName")
		delete(additionalProperties, "bookingDate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSubscriptionCapabilityCostReceivedDto struct {
	value *SubscriptionCapabilityCostReceivedDto
	isSet bool
}

func (v NullableSubscriptionCapabilityCostReceivedDto) Get() *SubscriptionCapabilityCostReceivedDto {
	return v.value
}

func (v *NullableSubscriptionCapabilityCostReceivedDto) Set(val *SubscriptionCapabilityCostReceivedDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionCapabilityCostReceivedDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionCapabilityCostReceivedDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionCapabilityCostReceivedDto(val *SubscriptionCapabilityCostReceivedDto) *NullableSubscriptionCapabilityCostReceivedDto {
	return &NullableSubscriptionCapabilityCostReceivedDto{value: val, isSet: true}
}

func (v NullableSubscriptionCapabilityCostReceivedDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionCapabilityCostReceivedDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
