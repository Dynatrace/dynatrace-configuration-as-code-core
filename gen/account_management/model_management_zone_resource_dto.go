/*
Dynatrace Account Management API

The enterprise management API for Dynatrace SaaS enables automation of operational tasks related to user access and environment lifecycle management.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmanagement

import (
	"encoding/json"
)

// checks if the ManagementZoneResourceDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementZoneResourceDto{}

// ManagementZoneResourceDto struct for ManagementZoneResourceDto
type ManagementZoneResourceDto struct {
	// The ID of the environment to which the management zone belongs.
	Parent string `json:"parent"`
	// The name of the management zone.
	Name string `json:"name"`
	// The ID of the management zone.
	Id string `json:"id"`
}

// NewManagementZoneResourceDto instantiates a new ManagementZoneResourceDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementZoneResourceDto(parent string, name string, id string) *ManagementZoneResourceDto {
	this := ManagementZoneResourceDto{}
	this.Parent = parent
	this.Name = name
	this.Id = id
	return &this
}

// NewManagementZoneResourceDtoWithDefaults instantiates a new ManagementZoneResourceDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementZoneResourceDtoWithDefaults() *ManagementZoneResourceDto {
	this := ManagementZoneResourceDto{}
	return &this
}

// GetParent returns the Parent field value
func (o *ManagementZoneResourceDto) GetParent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Parent
}

// GetParentOk returns a tuple with the Parent field value
// and a boolean to check if the value has been set.
func (o *ManagementZoneResourceDto) GetParentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parent, true
}

// SetParent sets field value
func (o *ManagementZoneResourceDto) SetParent(v string) {
	o.Parent = v
}

// GetName returns the Name field value
func (o *ManagementZoneResourceDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ManagementZoneResourceDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ManagementZoneResourceDto) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *ManagementZoneResourceDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ManagementZoneResourceDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ManagementZoneResourceDto) SetId(v string) {
	o.Id = v
}

func (o ManagementZoneResourceDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementZoneResourceDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["parent"] = o.Parent
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableManagementZoneResourceDto struct {
	value *ManagementZoneResourceDto
	isSet bool
}

func (v NullableManagementZoneResourceDto) Get() *ManagementZoneResourceDto {
	return v.value
}

func (v *NullableManagementZoneResourceDto) Set(val *ManagementZoneResourceDto) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementZoneResourceDto) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementZoneResourceDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementZoneResourceDto(val *ManagementZoneResourceDto) *NullableManagementZoneResourceDto {
	return &NullableManagementZoneResourceDto{value: val, isSet: true}
}

func (v NullableManagementZoneResourceDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementZoneResourceDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
