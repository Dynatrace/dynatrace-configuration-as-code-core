/*
Dynatrace Account Management API

The enterprise management API for Dynatrace SaaS enables automation of operational tasks related to user access and environment lifecycle management.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accountmanagement

import (
	"encoding/json"
)

// checks if the SubscriptionCostBookingDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionCostBookingDto{}

// SubscriptionCostBookingDto struct for SubscriptionCostBookingDto
type SubscriptionCostBookingDto struct {
	// The start time for the capability cost in `2021-05-01T15:11:00Z` format.
	StartTime string `json:"startTime"`
	// The end time for the capability cost in `2021-05-01T15:11:00Z` format.
	EndTime string `json:"endTime"`
	// The total cost for all the capabilities.
	Value float32 `json:"value"`
	// The currency of the cost.
	CurrencyCode string `json:"currencyCode"`
	// The last booking date for the capability cost
	LastBookingDate string `json:"lastBookingDate"`
}

// NewSubscriptionCostBookingDto instantiates a new SubscriptionCostBookingDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionCostBookingDto(startTime string, endTime string, value float32, currencyCode string, lastBookingDate string) *SubscriptionCostBookingDto {
	this := SubscriptionCostBookingDto{}
	this.StartTime = startTime
	this.EndTime = endTime
	this.Value = value
	this.CurrencyCode = currencyCode
	this.LastBookingDate = lastBookingDate
	return &this
}

// NewSubscriptionCostBookingDtoWithDefaults instantiates a new SubscriptionCostBookingDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionCostBookingDtoWithDefaults() *SubscriptionCostBookingDto {
	this := SubscriptionCostBookingDto{}
	return &this
}

// GetStartTime returns the StartTime field value
func (o *SubscriptionCostBookingDto) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCostBookingDto) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *SubscriptionCostBookingDto) SetStartTime(v string) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *SubscriptionCostBookingDto) GetEndTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCostBookingDto) GetEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *SubscriptionCostBookingDto) SetEndTime(v string) {
	o.EndTime = v
}

// GetValue returns the Value field value
func (o *SubscriptionCostBookingDto) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCostBookingDto) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SubscriptionCostBookingDto) SetValue(v float32) {
	o.Value = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *SubscriptionCostBookingDto) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCostBookingDto) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *SubscriptionCostBookingDto) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetLastBookingDate returns the LastBookingDate field value
func (o *SubscriptionCostBookingDto) GetLastBookingDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastBookingDate
}

// GetLastBookingDateOk returns a tuple with the LastBookingDate field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCostBookingDto) GetLastBookingDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastBookingDate, true
}

// SetLastBookingDate sets field value
func (o *SubscriptionCostBookingDto) SetLastBookingDate(v string) {
	o.LastBookingDate = v
}

func (o SubscriptionCostBookingDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionCostBookingDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["value"] = o.Value
	toSerialize["currencyCode"] = o.CurrencyCode
	toSerialize["lastBookingDate"] = o.LastBookingDate
	return toSerialize, nil
}

type NullableSubscriptionCostBookingDto struct {
	value *SubscriptionCostBookingDto
	isSet bool
}

func (v NullableSubscriptionCostBookingDto) Get() *SubscriptionCostBookingDto {
	return v.value
}

func (v *NullableSubscriptionCostBookingDto) Set(val *SubscriptionCostBookingDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionCostBookingDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionCostBookingDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionCostBookingDto(val *SubscriptionCostBookingDto) *NullableSubscriptionCostBookingDto {
	return &NullableSubscriptionCostBookingDto{value: val, isSet: true}
}

func (v NullableSubscriptionCostBookingDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionCostBookingDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
