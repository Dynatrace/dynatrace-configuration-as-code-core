name: End-to-end tests
on:
  push:
    branches:
      - main
  schedule:
   - cron: '0 0 * * *' # nightly build ensure E2E tests run daily and catch any breaking API changes
  pull_request_target:
    types:
      - labeled

jobs:
  integration-test:
    name: üåç Integration tests
    if: github.event.action != 'labeled' || github.event.label.name == 'run-e2e-test'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
    - name: Checkout # nosemgrep
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
      with:
        ref: ${{ github.event.pull_request.head.sha || github.sha }}

    - name: Set up Go 1.x
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
      with:
        go-version-file: go.mod

    - name: Install gotestsum
      run: go install gotest.tools/gotestsum@3f7ff0ec4aeb6f95f5d67c998b71f272aa8a8b41 #v1.12.1

    - name: Generate mocks
      run: |
        go install go.uber.org/mock/mockgen@v0.4
        go generate ./...

    - name: üåé Integration test
      run: gotestsum --format testdox --format-icons hivis -- -v -race -tags=e2e -timeout=30m  ./...
      env:
        CLASSIC_URL: ${{ secrets.CLASSIC_URL }}
        PLATFORM_URL: ${{ secrets.PLATFORM_URL }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
        PLATFORM_TOKEN: ${{ secrets.PLATFORM_TOKEN }}
        OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
        OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
        OAUTH_TOKEN_ENDPOINT: ${{ secrets.OAUTH_TOKEN_ENDPOINT }}
